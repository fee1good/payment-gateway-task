openapi: 3.0.0
info:
  title: Payment Gateway API
  description: API for processing payment transactions through multiple gateways with failover support
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com

servers:
  - url: http://localhost:8080
    description: Local development server

paths:
  /deposit:
    post:
      summary: Process a deposit transaction
      description: Initiates a deposit transaction through an appropriate payment gateway based on user's country
      operationId: processDeposit
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Deposit transaction initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '500':
          description: Server error processing the deposit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'

  /withdrawal:
    post:
      summary: Process a withdrawal transaction
      description: Initiates a withdrawal transaction through an appropriate payment gateway based on user's country
      operationId: processWithdrawal
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Withdrawal transaction initiated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '500':
          description: Server error processing the withdrawal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/APIResponse'

  /callback/{id}:
    post:
      summary: Handle gateway callback
      description: Endpoint for payment gateways to send transaction status updates
      operationId: handleCallback
      tags:
        - Callbacks
      parameters:
        - name: id
          in: path
          required: true
          description: Transaction ID
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CallbackRequest'
      responses:
        '200':
          description: Callback processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '400':
          description: Invalid callback data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'
        '500':
          description: Server error processing the callback
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponse'

components:
  schemas:
    TransactionRequest:
      type: object
      required:
        - amount
        - user_id
        - currency
      properties:
        amount:
          type: string
          description: Transaction amount (decimal string)
          example: "100.50"
        user_id:
          type: integer
          description: ID of the user initiating the transaction
          example: 1234
        currency:
          type: string
          description: Currency code for the transaction
          example: "USD"

    CallbackRequest:
      type: object
      required:
        - gateway_txn_id
        - status
      properties:
        gateway_txn_id:
          type: string
          description: Transaction ID from the payment gateway
          example: "gateway-txn-12345"
        status:
          type: string
          description: Status of the transaction from the gateway
          enum: [success, failed, pending]
          example: "success"
        error_message:
          type: string
          description: Error message if the transaction failed
          example: "Insufficient funds"

    APIResponse:
      type: object
      required:
        - status_code
        - message
      properties:
        status_code:
          type: integer
          description: HTTP status code
          example: 200
        message:
          type: string
          description: Response message
          example: "Transaction processed successfully"
        data:
          type: object
          description: Additional response data (optional)

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []